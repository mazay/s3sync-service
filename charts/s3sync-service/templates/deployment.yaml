---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "s3sync.fullname" . }}
  labels:
    {{- include "s3sync.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "s3sync.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "s3sync.labels" . | nindent 8 }}
    {{- if or .Values.podAnnotations .Values.prometheusExporter.enable }}
      annotations:
        {{- include "s3sync.podAnnotations" . | nindent 8 }}
    {{- end }}
    spec:
      serviceAccountName: {{ include "s3sync.serviceAccountName" . }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
    {{- end }}
    {{- if .Values.podSecurityContext }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
    {{- end }}
      containers:
      - name: "s3sync"
        image: {{ .Values.image.repository }}:{{- if .Values.image.tag }}{{ .Values.image.tag }}{{- else }}{{ .Chart.AppVersion }}{{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - "./s3sync-service"
      {{- if .Values.configmap.watch }}
        - "-configmap={{ .Release.Namespace }}/{{ include "s3sync.configmapName" . }}"
      {{- else }}
        - "-config=/opt/s3sync-service/config.yml"
      {{- end }}
      {{- if .Values.prometheusExporter.enable }}
        - "-metrics-path={{ .Values.prometheusExporter.path }}"
        - "-metrics-port={{ .Values.prometheusExporter.port }}"
      {{- else }}
        - "-metrics-port=0"
      {{- end }}
      {{- if .Values.httpServer.enable }}
        - "-http-port={{ .Values.httpServer.port }}"
      {{- end }}
      {{- if or (and .Values.secret.AWS_ACCESS_KEY_ID .Values.secret.AWS_SECRET_ACCESS_KEY) .Values.secret.name }}
        envFrom:
        - secretRef:
          {{- if and (and .Values.secret.AWS_ACCESS_KEY_ID .Values.secret.AWS_SECRET_ACCESS_KEY) (eq .Values.secret.name "") }}
            name: {{ include "s3sync.fullname" . }}
          {{- else }}
            name: {{ .Values.secret.name }}
          {{- end }}
      {{- end }}
      {{- if .Values.httpServer.enable }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ .Values.httpServer.port }}
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ .Values.httpServer.port }}
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
      {{- end }}
      {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
      {{- end }}
      {{- if .Values.securityContext }}
        securityContext: {{ toYaml .Values.securityContext | nindent 10 }}
      {{- end }}
      {{- if or .Values.volumeMounts (eq .Values.configmap.watch false) }}
        volumeMounts: {{ toYaml .Values.volumeMounts | nindent 8 }}
      {{- if eq .Values.configmap.watch false }}
        - name: config-volume
          mountPath: /opt/s3sync-service
      {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 300
    {{- if or .Values.volumes (eq .Values.configmap.watch false) }}
      volumes: {{ toYaml .Values.volumes | nindent 6 }}
    {{- if eq .Values.configmap.watch false }}
      - name: config-volume
        configMap:
          defaultMode: 420
          name: {{ include "s3sync.configmapName" . }}
    {{- end }}
    {{- end }}
